<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.codeforfun.generator.mapper.AppMapper">
    <resultMap id="BaseResultMap" type="cn.codeforfun.generator.model.App">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="app_id" jdbcType="BIGINT" property="appId"/>
        <result column="app_name" jdbcType="VARCHAR" property="appName"/>
        <result column="app_code" jdbcType="VARCHAR" property="appCode"/>
        <result column="app_project_id" jdbcType="BIGINT" property="appProjectId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="appMap" type="cn.codeforfun.modules.app.vo.AppVO">
        <collection property="configList" resultMap="cn.codeforfun.generator.mapper.ConfigMapper.configMap"/>
    </resultMap>
    <insert id="insertAppConfigRelationshipByAppId">
        insert into relationship_app_config (relationship_app_id, relationship_config_id) values
        <foreach collection="configIdList" item="configId" separator=",">
            (#{appId},#{configId})
        </foreach>
    </insert>
    <delete id="deleteAppConfigRelationshipByAppId">
        delete
        from relationship_app_config
        where relationship_app_id = #{0}
    </delete>
    <select id="findAppList" resultMap="appMap">
        select sa.app_id,
        sa.app_name,
        sa.app_code,
        sc.config_id,
        config_name,
        se.env_id,
        env_name,
        env_code
        from system_app sa
        left join relationship_app_config rac on sa.app_id = rac.relationship_app_id
        left join system_config sc on rac.relationship_config_id = sc.config_id
        left join system_env se on sc.config_env_id = se.env_id
        <where>
            <choose>
                <when test="projectId != null and projectId != ''">
                    and sa.app_project_id = #{projectId}
                </when>
                <when test="appId != null and appId != ''">
                    and sa.app_id = #{appId}
                </when>
            </choose>
        </where>
    </select>
    <select id="findAppCodeListByEnvIdsOrConfigIdsOrAppIds" resultType="java.lang.String">
        select distinct concat(sp.project_code, '_', sa.app_code)
        from system_app sa
        left join relationship_app_config rac on sa.app_id = rac.relationship_app_id
        left join system_config sc on rac.relationship_config_id = sc.config_id
        left join system_env se on sc.config_env_id = se.env_id
        left join system_project sp on sa.app_project_id = sp.project_id
        <where>
            <if test="appIdList != null and appIdList.size() > 0">
                or sa.app_id in (
                <foreach collection="appIdList" item="appId" separator=",">#{appId}</foreach>
                )
            </if>
            <if test="envIdList != null and envIdList.size() > 0">
                or se.env_id in (
                <foreach collection="envIdList" item="envId" separator=",">#{envId}</foreach>
                )
            </if>
            <if test="configIdList != null and configIdList.size() > 0">
                or sc.config_id in (
                <foreach collection="configIdList" item="configId" separator=",">#{configId}</foreach>
                )
            </if>
        </where>
    </select>
</mapper>